Курсовая работа 8 посвящена организации данных, называемых линейными списками.
В инструкции предлагается два разных способа организации линейных списка:
(1) через динамические структуры и (2) через отображения на массивы.
На практике обычно используется первый способ, в котором каждый элемент списка  создаётся через динамическое выделение памяти, а порядок их следования в списке задаётся указателями на следующий элемент.
Второй способ организации несколько более сложный и представляет только чисто программистский интерес.
В этом способе элементы списка располагаются в основном массиве, а порядок следования элементов в списке определяется другим параллельным массивом: массивом индексов, который содержит индексы следующих элементов. В массиве индексов также организуется список "дыр", которые образуются при удалении элементов из списка, и которые можно использовать для вставки новых элементов списка. Мне нравится этот способ и я люблю о нём рассказывать, но, к сожалению, не имею возможности. Второй способ по инструкции относится только к группе 104, которая числится за мной. Остальные группы делают вариант с динамическими списками.
Из соображения удобства, я был бы не против, чтобы все три мои группы делали эту работу первым способом (динамические структуры). Желающие из любой группы могут выбрать второй способ реализации списка (на повышение оценки), если сочтут, что справятся с этим способом самостоятельно.

Я привожу пример программы (list3.cpp), реализующей один из примерных вариантов задания  курсовой работы 8.
Разобравшись в этом примере, можно сделать свой вариант по аналогии.

Список в этом примере двусторонний, то есть, каждый элемент списка ссылается на предыдуший элемент (указатель pre) и на следующий элемент в списке (указатель next). Элементы списка задаются структурой ls, состоящей из трех компонент: body, pre, next. Компонента body содержит значение элемента списка, тип которого определяется в задании. В нашем примере таким типом является перечислительный тип, в качестве значений которого взяты краткие названия месяцев.

Работа с программой организовано через меню (MENU), состоящее из 10 пунктов, которое предусматривает: генерацию списка случайным образом (пункт 1), печать полученного списка (пункт 5), добавление и вставку в список новых элементов (пункты 2, 3 и 6), удаление элементов из списка (пункт 4), печать меню (пункт 9), выход из программы (пункт 0).

Основное действие, предусмотренное заданием в этом примере: в списке для заданного элемента поменять местами предшествующий ему и следующий за ним элементы (пункт 10 меню).

Для создания списка случайным образом в программе использован стандартный генератор случайных чисел (rand() и инициализация srand из библиотеки stdlib.h).

Если возникнут вопросы по программе, задавайте их по e-mail.
Проверьте работу программы у себя. Могут возникнуть легко исправимые ошибки, зависящие от системы, в которой работаете.
