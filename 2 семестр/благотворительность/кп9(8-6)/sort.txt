vector<int> tournament_sort(vector<int> v)
{
    int n = v.size();
    int size;
    int idx;
    for (int i = 1; ; i *= 2) {
        if (i >= n) {
            size = i;
            break;
        }
    }
    vector<int> res(n);
    vector<int> tree(2 * size - 1, -1);
    for (int i = 0; i < n; ++i) {
        tree[i + size - 1] = v[i];
    }
    
    for (int i = size - 2; i >= 0; --i) {
        tree[i] = min_el(tree[(2 * i + 1)], tree[(2 * i + 2)]);
    }
    
    for (int i = 0; i < n; ++i) {
        idx = 0;
        res[i] = tree[idx];
        tree[idx] = -1;
        
        while (idx < size - 1) {
            if (tree[idx * 2 + 1] == res[i]) {
                tree[idx * 2 + 1] = -1;
                idx = idx * 2 + 1;
            } else {
                tree[idx * 2 + 2] = -1;
                idx = idx * 2 + 2;
            }
        }
        
        while (idx) {
            idx -= 1;
            idx /= 2;
            tree[idx] = min_el(tree[(2 * idx + 1)], tree[(2 * idx + 2)]);
        }
        
        
    }
    
    return res;
}