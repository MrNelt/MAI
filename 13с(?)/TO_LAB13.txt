
                    // for program  to_lab13.cpp
// file Set.h
// --------------------------------------------------

#define N 26

char A='A';
char Z='Z';
char a='a';
char z='z';

  char Alph[2*N];  // alphabet: small and capital letters


int Letter(char c)
{ return c>=a&&c<=z||c>=A&&c<=Z; }


CreateSet(char W[], char S[])
{ char c; int i;
  for(i=0;i<N;i++)S[i]=S[N+i]=0;
  for(i=0;c=W[i];i++)
  if(c>=a&&c<=z) S[c-a]=1; else
  if(c>=A&&c<=Z) S[N+c-A]=1;
}

DisplaySet(char S[])
{
  Alph[0]=a; Alph[N]=A; Alph[2*N]=0; // alphabet fills up
  for(int i=1;i<N;i++)
  { Alph[i]=Alph[i-1]+1;
   Alph[i+N]=Alph[i+N-1]+1; }        // --"--
   printf("\n%s\n",Alph);            // and prints
  for(i=0;i<2*N;i++)
  printf("%1d",S[i]); printf("\n");  // set prints
}

int EqualSet(char S1[], char S2[])
{ for(int i=0;i<2*N;i++)
  if(S1[i]!=S2[i]) return 0; return 1;
}

UnionSet(char S1[], char S2[], char S3[])
{ for(int i=0;i<2*N;i++) S3[i]=S1[i]||S2[i]; }

IntersSet(char S1[], char S2[], char S3[])
{ for(int i=0;i<2*N;i++) S3[i]=S1[i]&&S2[i]; }

int IncludeSet(char S1[], char S2[])
{ for(int i=0;i<2*N;i++)
   if(S1[i]==1&&S2[i]==0) return 0; return 1;
}

int EmptySet(char S[])
{ for(int i=0;i<2*N;i++)
   if(S[i]==1) return 0; return 1;
}

InSet(char c, char S[])              // add to set
{ if(Letter(c))
  if(c<=z) S[c-a]=1; else S[c+N-A]=1;
}



// --------------------------------- file of main program

/* Problem:
 Find all words contain vowels 'y', 'o', 'u' only.
*/

#include<stdio.h>
#include"Set.h"

char Word[20], S[2*N],              // S - set for word
Vowels[]="AEIOUYaeiouy", Sv[2*N],   // Sv - set for vowels
You[]="YOUyou", Sy[2*N], S1[2*N];   // Sy - set for letters y,o,u

main()
{ int i, n, m=0; char oldc=' ', c;
    CreateSet(Vowels,Sv); CreateSet(You,Sy);
//      DisplaySet(Sv); DisplaySet(Sy);   // print for test
  while(i!=EOF)
  { i=getchar(); c=i;
    if(!Letter(oldc)&&Letter(c)){n=0;Word[0]=c;}  // begin of word
    if(Letter(oldc)&&Letter(c)) Word[++n]=c;
    if(Letter(oldc)&&!Letter(c))                  // end of word
    { Word[++n]='\0';
      CreateSet(Word,S); IntersSet(S,Sv,S1);      // intersection of sets
//	DisplaySet(S); DisplaySet(S1);                    // print for test
       if(!EmptySet(S1)&&IncludeSet(S1,Sy))       // only our vowels
	 { printf("%s ",Word); if(!(++m%10)) printf("\n"); }
    }
   oldc=c;
  }
}
/* After:
	  to_lab13.exe <to_lab13.cpp >>to_lab13.cpp
   Result:

words y o u only Word for word for You 
YOUyou Sy Sy for y o u oldc You Sy 
Sy for oldc Word of word oldc Word oldc of 
word Word Word of for Sy only our Word oldc 

*/
